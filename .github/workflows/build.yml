name: Create Release After PR Merge

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # NecessÃ¡rio para buscar todas as tags

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git tag --sort=-creatordate | head -n 1)
          if [ -z "$TAG" ]; then
            TAG="v0.0.0"
          fi
          echo "Latest tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump_version
        run: |
          OLD_TAG=${{ steps.get_tag.outputs.tag }}
          if [[ "$OLD_TAG" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=${BASH_REMATCH[3]}
            NEW_TAG="v$MAJOR.$MINOR.$((PATCH+1))"
          else
            NEW_TAG="v0.0.1"
          fi
          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create new tag if not exists
        run: |
          TAG_NAME=${{ steps.bump_version.outputs.new_tag }}
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists. Skipping tag creation."
            exit 1
          fi

          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          name: Release ${{ steps.bump_version.outputs.new_tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
